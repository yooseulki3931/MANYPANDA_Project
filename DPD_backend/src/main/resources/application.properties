server.port=8000

spring.datasource.hikari.poolName=HikariPoolBooks
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.maximumPoolSize=1

# \uB85C\uCEEC \uACBD\uB85C
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
#spring.datasource.username=scott
#spring.datasource.password=tiger

# \uC624\uB77C\uD074 \uD074\uB77C\uC6B0\uB4DC DB \uC811\uC18D \uC815\uBCF4
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=\uC804\uC790\uC9C0\uAC11\uACBD\uB85C
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=C:/Work/98_eWallet/eWallet_orcl/
spring.datasource.username=scott
spring.datasource.password=Ds1234567890

spring.devtools.restart.enabled=true

spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.properties.hibernate.format_sql=true

spring.sql.init.continue-on-error=true
spring.sql.init.mode=always
#spring.sql.init.mode=never

# \uCCA8\uBD80\uD30C\uC77C \uC5C5\uB85C\uB4DC \uC0AC\uC774\uC988 \uC81C\uD55C
# \uAE30\uBCF8 \uC5C5\uB85C\uB4DC \uC0AC\uC774\uC988 : 1MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT setting
bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000

# Google simple login setting
spring.security.oauth2.client.registration.google.clientId=527404890966-rtjr40astljke5omnrva9nbd7elf671j.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=email, profile

# Naver simple login setting
spring.security.oauth2.client.registration.naver.clientId=_ZRCwgHhaLzzBTtOntwg
spring.security.oauth2.client.registration.naver.clientSecret=vxzDPTqYsz
#spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:8080/login/ouath2/code/naver
spring.security.oauth2.client.registration.naver.redirect_uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=email, profile
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver

# Kakao simple login setting
spring.security.oauth2.client.registration.kakao.clientId=d29ce3a86710b0a3d11df11e8598cbc6
spring.security.oauth2.client.registration.kakao.clientSecret=Gn4YX8RtTNJluZIMonysNsWw2SzFo3pJ
spring.security.oauth2.client.registration.kakao.clientAuthenticationMethod=post
spring.security.oauth2.client.registration.kakao.authorizationGrantType=authorization_code
spring.security.oauth2.client.registration.kakao.redirectUri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.clientName=Kakao

# Naver provider register
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao provider register
spring.security.oauth2.client.provider.kakao.authorizationUri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.tokenUri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.userInfoUri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.userNameAttribute=id









